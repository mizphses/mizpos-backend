name: CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          secrets: |
            TOKEN_KEY
            SALT
            GOOGLE_ID
            GOOGLE_SECRET
            GITHUB_ID
            GITHUB_SECRET
            JWT_SECRET
            STRIPE_API_KEY
            STRIPE_WEBHOOK_SECRET
        env:
          TOKEN_KEY: ${{ secrets.TOKEN_KEY }}
          SALT: ${{ secrets.SALT }}
          GOOGLE_ID: ${{ secrets.GOOGLE_ID }}
          GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET }}
          GITHUB_ID: ${{ secrets.GITHUB_ID }}
          GITHUB_SECRET: ${{ secrets.GITHUB_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

  db-deploy:
    runs-on: ubuntu-latest
    name: D1 Deploy
    if: ${{ github.event.inputs.with_d1 == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: d1 migrations apply --remote MIZPOS
