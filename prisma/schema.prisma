generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator markdown {
  provider = "prisma-markdown"
  output   = "../docs/ERD.md"
  title    = "DB Schema for MIZPOS"
}

model User {
  id          String       @id @default(cuid())
  name        String
  email       String       @unique
  password    String?
  role        String       @default("USER")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  googleOauth GoogleOauth?
  githubOauth GitHubOauth?
  cart        Cart[]
  orders      Orders[]
}

model GoogleOauth {
  id        String   @id @default(cuid())
  email     String   @unique
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model GitHubOauth {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Items {
  id          String   @id @default(cuid())
  name        String
  price       Int
  description String?
  image       String?
  visible     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Cart {
  id        String   @id @default(cuid())
  userId    String?
  itemsList String
  status    String   @default("pending")
  stripeId  String   @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  orders    Orders[]
}

model Orders {
  id        String   @id @default(cuid())
  userId    String?
  total     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cartId    String
  user      User?    @relation(fields: [userId], references: [id])
  cart      Cart     @relation(fields: [cartId], references: [id])
}
